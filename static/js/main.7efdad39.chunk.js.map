{"version":3,"sources":["List.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editId","setEditId","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7efdad39.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\n\r\nconst List = ({items, removeItem,editItem}) => {\r\n    return <div className='grocery-list'>\r\n        {items.map((item)=>{\r\n            const {id,title} = item;\r\n            return <article key={id} className='grocery-item'>\r\n                <p className='title'>{title}</p>\r\n                <div className='btn-container'>\r\n                    <button type='button' className='edit-btn' onClick={()=> editItem(id)}><FaEdit/></button>\r\n                    <button type='button' className='delete-btn' onClick={()=> removeItem(id)}><FaTrash/></button>\r\n                </div>\r\n            </article>\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default List","import React, { useEffect } from 'react';\r\n\r\nconst Alert = ({type,msg,removeAlert,list}) => {\r\n    useEffect(()=>{\r\n        const timeout = setTimeout(()=>{\r\n            removeAlert()\r\n        },3000)\r\n        return () => clearTimeout(timeout)\r\n    }, [list])\r\n    return <p className={`alert alert-${type}`}>{msg}</p>\r\n}\r\n\r\nexport default Alert","import React, { useState, useEffect } from 'react';\r\nimport List from './List';\r\nimport Alert from './Alert';\r\nimport './App.css';\r\n\r\nconst getLocalStorage = () => {\r\n  let list = localStorage.getItem('list');\r\n  if(list){\r\n    return JSON.parse(localStorage.getItem('list'))\r\n  }else{\r\n    return []\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [name, setName] = useState('')\r\n  const [list, setList] = useState(getLocalStorage())\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [editId, setEditId] = useState(null)\r\n  const [alert, setAlert] = useState({ show: false, msg: '', type: '' })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(!name){\r\n      // display alert\r\n    }\r\n    else if(name && isEditing) {\r\n      // deal with edit\r\n      setList(list.map((item)=>{\r\n        if(item.id === editId){\r\n          return {...item,title:name}\r\n        }\r\n        return item\r\n      }))\r\n      setName('');\r\n      setEditId(null)\r\n      setIsEditing(false)\r\n      showAlert(true, 'success', 'value changed')\r\n    }\r\n    else {\r\n      // show alert\r\n      showAlert(true,'success','item added to the list')\r\n      const newItem = {id: new Date().getTime().toString(),title:name}\r\n      setList([...list,newItem])\r\n      setName('')\r\n    }\r\n  }\r\n    const showAlert = (show=false, type='', msg='')=>{\r\n      setAlert({ show, type, msg })\r\n    }\r\n    const clearList = () => {\r\n      showAlert(true,'danger','empty list');\r\n      setList([])\r\n    }\r\n    const removeItem = (id) => {\r\n      showAlert(true,'danger', 'item removed')\r\n      setList(list.filter((item)=>item.id !==id))\r\n    }\r\n    const editItem = (id) => {\r\n      const specificItem = list.find((item)=> item.id === id);\r\n      setIsEditing(true);\r\n      setEditId(id)\r\n      setName(specificItem.title)\r\n    }\r\n    useEffect(()=>{\r\n      localStorage.setItem('list',JSON.stringify(list))\r\n    },[list])\r\n  return <section className='section-center'>\r\n    <form className='grocery-form' onSubmit={handleSubmit}>\r\n      {alert.show && <Alert {...alert} list={list} />}\r\n      <h3>grocery bud</h3>\r\n      <input type='text' className='grocery' placeholder='e.g. eggs' value={name} onChange={(e)=>setName(e.target.value)} />\r\n      <button type='submit' className='submit-btn'>{isEditing ? 'edit' : 'submit'}</button>\r\n    </form>\r\n    {list.length > 0 &&\r\n      (<div className='grocery-container'>\r\n      <List items={list} removeItem={removeItem} editItem={editItem} />\r\n      <button className='clear-btn'onClick={clearList}>clear items</button>\r\n    </div>)}\r\n  </section>\r\n}\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}